apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "identity-provider.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "identity-provider.name" . }}
    helm.sh/chart: {{ include "identity-provider.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "identity-provider.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "identity-provider.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-identity-provider-data
      {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-identity-provider-data

      {{- else }}
          emptyDir: {}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name : {{ .Release.Name }}-identity-provider-data
              mountPath : "/home/craft/identity-provider/files"
          env:
            - name: "DB_HOST"
              value: {{ template "mongodb.fullname" . }}
            - name: "DB_NAME"
              value: "identity-provider"
            - name: "DB_USER"
              value: "identity-provider"
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  mongodbPassword
                  name: {{ .Release.Name }}-secrets
            - name: "NODE_ENV"
              value: {{ .Values.NODE_ENV }}
          ports:
            - name: http
              containerPort: 3200
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /info
              port: http
          readinessProbe:
            httpGet:
              path: /info
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
